{"version":3,"sources":["Modal/Modal.tsx","Demo.tsx","index.js"],"names":["Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ariaHideApp","ReactModal","setAppElement","_this$props","children","_this$props$direction","directionFrom","className","overlayClassName","CloseComponent","closeComponent","objectWithoutProperties","directionClass","concat","react_default","a","createElement","lib_default","assign","contentLabel","closeTimeoutMS","style","content","width","aria-label","onClick","onRequestClose","src","React","Component","defaultProps","isOpen","Demo","state","toggleVisibleModal","setState","renderCloseComponent","id","Modal_Modal","ReactDOM","render","Demo_Demo","document","getElementById"],"mappings":"wPAqBqBA,qBACnB,SAAAA,EAAYC,GAAkB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC5BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IAEFA,EAAMQ,aACRC,IAAWC,cAAcV,EAAMU,eAJLT,wEAYrB,IAAAU,EAQHP,KAAKJ,MANPY,EAFKD,EAELC,SAFKC,EAAAF,EAGLG,qBAHK,IAAAD,EAGW,QAHXA,EAILE,EAJKJ,EAILI,UACAC,EALKL,EAKLK,iBACgBC,EANXN,EAMLO,eACGlB,EAPEE,OAAAiB,EAAA,EAAAjB,CAAAS,EAAA,8EASDS,EAAc,eAAAC,OAAkBP,GAEtC,OACEQ,EAAAC,EAAAC,cAACC,EAAAF,EAADrB,OAAAwB,OAAA,CACElB,aAAa,EACbmB,aAAc,QACdC,eA9Be,KA+BX5B,EAJN,CAKEe,UAAS,cAAAM,OAAgBD,EAAhB,KAAAC,OAAkCN,GAAa,IACxDC,iBAAgB,uBAAAK,OAAyBL,GAAoB,IAC7Da,MAAO,CACLC,QAAS,CAAEC,MAAO3B,KAAKJ,MAAM+B,OAAS,UAGxCT,EAAAC,EAAAC,cAAA,WACGZ,EACAK,EACCK,EAAAC,EAAAC,cAACP,EAAD,MAEAK,EAAAC,EAAAC,cAAA,UACET,UAAW,oBACXiB,aAAY,QACZC,QAAS7B,KAAKJ,MAAMkC,gBAEpBZ,EAAAC,EAAAC,cAAA,OAAKW,IAAK,yBA9CWC,IAAMC,YAApBtC,EASZuC,aAAoC,CACzCC,QAAQ,OC3BSC,6MACnBC,MAAQ,CACNF,QAAQ,KAGVG,mBAAqB,WACnBzC,EAAK0C,SAAS,CACZJ,QAAStC,EAAKwC,MAAMF,YAIxBK,qBAAuB,kBACrBtB,EAAAC,EAAAC,cAAA,UAAQS,QAAShC,EAAKyC,oBACpBpB,EAAAC,EAAAC,cAAA,OAAKW,IAAK,yFAKZ,OACEb,EAAAC,EAAAC,cAAA,OAAKqB,GAAI,QACPvB,EAAAC,EAAAC,cAAA,UAAQS,QAAS7B,KAAKsC,oBAAtB,cACApB,EAAAC,EAAAC,cAACsB,EAAD,CAEEP,OAAQnC,KAAKqC,MAAMF,OAEnBZ,aAAc,aACdO,eAAgB9B,KAAKsC,mBAErB5B,cAAe,QAEfJ,cAAe,QAEfF,aAAa,GAXf,kCArB0B4B,IAAMC,WCCxCU,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.5ad9f05d.chunk.js","sourcesContent":["import React, { ReactElement, ReactInstance, ReactNode, ReactType } from 'react';\nimport ReactModal from 'react-modal';\n\nimport './modal.scss';\n\ninterface PropTypes {\n  directionFrom?: string;\n  className?: string;\n  overlayClassName?: string;\n  width?: string;\n  onRequestClose?: () => void;\n  isOpen: boolean;\n  contentLabel?: string;\n  setAppElement: string | HTMLElement;\n  ariaHideApp: boolean;\n  closeComponent?: ReactType;\n}\ninterface StateTypes {}\n\nconst closeTimeoutMS = 500;\n\nexport default class Modal extends React.Component<PropTypes, StateTypes> {\n  constructor(props: PropTypes) {\n    super(props);\n\n    if (props.ariaHideApp) {\n      ReactModal.setAppElement(props.setAppElement);\n    }\n  }\n\n  static defaultProps: { isOpen: boolean } = {\n    isOpen: false,\n  };\n\n  render() {\n    const {\n      children,\n      directionFrom = 'right',\n      className,\n      overlayClassName,\n      closeComponent: CloseComponent,\n      ...props\n    } = this.props;\n    const directionClass = `slide-pane--${directionFrom}`;\n\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        contentLabel={'Modal'}\n        closeTimeoutMS={closeTimeoutMS}\n        {...props}\n        className={`slide-pane ${directionClass} ${className || ''}`}\n        overlayClassName={`slide-pane--overlay ${overlayClassName || ''}`}\n        style={{\n          content: { width: this.props.width || '80%' },\n        }}\n      >\n        <div>\n          {children}\n          {CloseComponent ? (\n            <CloseComponent />\n          ) : (\n            <button\n              className={'slide-pane--close'}\n              aria-label={'close'}\n              onClick={this.props.onRequestClose}\n            >\n              <img src={'/close.svg'} />\n            </button>\n          )}\n        </div>\n      </ReactModal>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Modal } from './Modal';\n\nexport default class Demo extends React.Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggleVisibleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  renderCloseComponent = () => (\n    <button onClick={this.toggleVisibleModal}>\n      <img src={'/close.svg'} />\n    </button>\n  );\n\n  render() {\n    return (\n      <div id={'demo'}>\n        <button onClick={this.toggleVisibleModal}>Open modal</button>\n        <Modal\n          // default false\n          isOpen={this.state.isOpen}\n          // default Modal\n          contentLabel={'Demo Modal'}\n          onRequestClose={this.toggleVisibleModal}\n          // default from right\n          directionFrom={'right'}\n          // optional for accessibility\n          setAppElement={'#root'}\n          // default false allows you to skip setAppElement prop for react-modal\n          ariaHideApp={true}\n          // optional\n          // closeComponent={this.renderCloseComponent}\n        >\n          Demo content for Modal\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Demo from \"./Demo\";\n\nReactDOM.render(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}